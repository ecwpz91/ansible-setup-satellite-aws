---

#---------------------------------------------------
# Key
#---------------------------------------------------

- debug: msg="{{ remote_user_key_file }}"

- name: Check key exists
  stat:
    path: "{{ remote_user_key_file }}"
  register: stat_result

- name: Remove remote key
  ec2_key: name="{{ remote_user_key }}" region="{{ aws_region }}" state=absent
  when: stat_result.stat.exists == False
  ignore_errors: yes

- name: Create new key
  ec2_key: name="{{ remote_user_key }}" region="{{ aws_region }}" state=present
  register: ec2_key
  when: stat_result.stat.exists == False

- name: Create hidden directory
  file: path="{{ workspace }}" state=directory
  when: stat_result.stat.exists == False

- name: Copy key file
  copy:
    content: "{{ ec2_key.key.private_key }}"
    dest: "{{ remote_user_key_file }}"
    mode: 0400
  when: stat_result.stat.exists == False

- name: Set key permissions
  file:
   path: "{{ remote_user_key_file }}"
   state: touch
   mode: 0400
  when: stat_result.stat.exists == False

- name: Set ec2 key
  ec2_key:
    name: "{{ remote_user_key }}"
    region: "{{ aws_region }}"
    key_material: "{{ item }}"
    force: false
    state: present
  with_file: "{{ remote_user_key_file }}"
  register: ec2_key
  when: stat_result.stat.exists == True

- debug: msg="{{ ec2_key }}"